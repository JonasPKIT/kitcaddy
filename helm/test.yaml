---
# Source: kitcaddy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pexip-history-config
  namespace: pexip
data:
  config.json: |
    {
      "logging": {
        "logs": {
          "default": {
            "level": "INFO"
          }
        }
      },
      "admin": {
        "disabled": true
      },
      "apps": {
        "tls": {
          "certificates": {
            "load_files": [
              {
                "certificate": "/certificates/server.cert",
                "key": "/certificates/server.key",
                "format": "pem",
                "tags": [
                ]
              },
              {
                "certificate": "/certificates/server.cert",
                "key": "/certificates/server.key",
                "format": "pem",
                "tags": [
                    "xyz",
                    "abc"
                ]
              }
            ]
          }
        },
        "http": {
          "servers": {
            "pexip-wsp": {
                "listen": [
                  ":80"
              ],
            "strict_sni_host": false,
            "tls_connection_policies": [
              {
                  "client_authentication": {
                      "require": true
                  }
              }
            ],
            "automatic_https": {
                "disable_redirects": true
            },

              "routes": [
                  {
                    "match": [
                      {
                        "path": [
                          "/meet/*"
                        ]
                      }
                    ],

                    "handle": [
                      {
                        "handler": "reverse_proxy",
                        "transport": {
                          "protocol": "http",
                          "read_buffer_size": 4096
                      },
                      "upstreams": [
                        {
                          "dial": "localhost:8080"
                        }
                      ]
                    }
                  ]
                },
                  {
                    "match": [
                      {
                        "path": [
                          "/host/*"
                        ]
                      }
                    ],

                    "handle": [
                      {
                        "handler": "prometheus",
                        "metrics_path": "/metrics"
                      },
                      {
                        "handler": "oioidwsrestwsp",
                        "mongo_host": "mongodb.mongo",
                        "mongo_db": "pexip-history-wsp",
                        "trust_cert_files": [
                          "/trust/sts.cer"
                        ],
                        "audience_restriction": "urn:pexip-history:vconf:dk",
                        "sessiondata_headername": "sessiondataheader",
                        "ssl_client_cert_header_names": [
                          "surviving-bogus-header",
                          "forwarded-from-nginx"
                        ],
                        "hok": "true"

                      },
                      {
                        "handler": "oioidwsrestwsc",
                        "mongo_host": "mongodb.mongo",
                        "mongo_db": "pexip-history-wsc",
                        "sts_url": "mysts.host/sts",
                        "client_cert_file": "/trust/client.cer",
                        "client_key_file": "/trust/client.key",
                        "trust_cert_files": [
                                    "/trust/cert.cer"
                        ],
                        "session_data_url": "session_data_url",
                        "service_endpoint": "https://host:port/endpoint",
                        "service_audience": "serviceAudience"

                      },
                      {
                        "handler": "samlprovider",
                        "session_header_name": "sessionid",
                        "session_expiry_hours": "1",
                        "mongo_host": "mongodb.mongo",
                        "mongo_db": "m-sp",
                        "audience_restriction": "urn:m:vdxapi:dk",
                        "idp_metadata_url": "https://login.vdxapi.dk/auth/realms/broker/protocol/saml/descriptor",
                        "entityId": "urn:m:vdxapi:dk",
                        "sign_authn_req": "true",
                        "sign_cert_file": "/certificate/tls.crt",
                        "sign_key_file": "/certificate/tls.key",

                        "external_url": "https://m.vdxapi.dk",
                        "metadata_path": "/host/saml/metadata",
                        "logout_path": "/host/saml/logout",
                        "slo_path": "/host/saml/slo",
                        "sso_path": "/host/saml/sso",
                        "logout_landing_page": "https://m.vdxapi.dk/meet",

                        "cookie_domain": "m.vdxapi.dk",
                        "cookie_path": "/"
                      },
                      {
                        "handler": "reverse_proxy",
                        "transport": {
                          "protocol": "http",
                          "tls": {
                              "insecure_skip_verify": true,
                              "client_certificate_file": "WSC_CLIENT_CERTIFICATE_FILE",
                              "client_certificate_key_file": "WSC_CLIENT_KEY_FILE"
                          },
                          "read_buffer_size": 4096
                      },
                      "upstreams": [
                        {
                          "dial": "localhost:8080"
                        }
                      ]
                      ,
                      "headers": {
                        "request": {
                          "set": {
                            "Host": ["localhost:8080"]
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "pexip-wsp2": {
                "listen": [
                  ":80443"
              ],

              "routes": [
                  {
                    "match": [
                      {
                        "path": [
                          "/h"
                        ]
                      }
                    ],

                    "handle": [
                      {
                        "handler": "prometheus",
                        "metrics_path": "/metrics"
                      },
                      {
                        "handler": "oioidwsrestwsp",
                        "mongo_host": "mongodb.mongo123",
                        "mongo_db": "pexip-history-wsp123",
                        "trust_cert_files": [
                          "/trust/sts.cer132"
                        ],
                        "audience_restriction": "urn:pexip-history:vconf:dk123",
                        "sessiondata_headername": "sessiondataheader123",
                        "hok": "true132"

                      },
                      {
                        "handler": "reverse_proxy",
                        "transport": {
                          "protocol": "http",
                          "read_buffer_size": 4096
                      },
                      "upstreams": [
                        {
                          "dial": "localhost123:8.080132e+06"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    }
---
# Source: kitcaddy/templates/doc-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pexip-history-documentation
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history-documentation
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: container-port
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history-documentation
---
# Source: kitcaddy/templates/kitcaddy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pexip-history
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/path: /manage/actuator/appmetrics
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: proxy-port
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history
---
# Source: kitcaddy/templates/doc-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pexip-history-documentation
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history-documentation
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kitcaddy
      app.kubernetes.io/instance: pexip-history-documentation
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kitcaddy
        app.kubernetes.io/instance: pexip-history-documentation
    spec:
      imagePullSecrets:
        - name: kit4medcom
      securityContext:
        {}
      containers:
        - name: pexip-history-documentation
          securityContext:
            {}
          image: "kvalitetsit/medcom-vdx-pexip-history-documentation:1.1.1"
          imagePullPolicy: IfNotPresent
          env:
            []
          ports:
            - name: container-port
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
---
# Source: kitcaddy/templates/kitcaddy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pexip-history
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kitcaddy
      app.kubernetes.io/instance: pexip-history
  template:
    metadata:
      annotations:
        prometheus.io/path: /history/actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: kitcaddy
        app.kubernetes.io/instance: pexip-history
    spec:
      imagePullSecrets:
        - name: kit4medcom
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: kitcaddy
          args:
            - -config
            - /config/config.json
          env: []
          image: "kvalitetsit/kitcaddy:1.0.2"
          ports:
            - containerPort: 80
              name: proxy-port
          volumeMounts:
            - mountPath: /config
              name: caddy-config
            - mountPath: /trust
              name: sts-public-cert
            
        - name: pexip-history
          securityContext:
            {}
          image: "kvalitetsit/medcom-vdx-pexip-history:1.1.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: nats.url
              value: nats://nats:4222
            - name: nats.subject
              value: PexipEvent
            - name: nats.clusterId
              value: nats-stream
            - name: nats.clientId
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: nats.queue.group
              value: PexipEvent
            - name: nats.queue.durableName
              value: "04062020_1430"
            - name: mongodb.uri
              value: mongodb://mongodb.mongo:27017/?readPreference=secondaryPreferred&replicaSet=rs0
            - name: mongodb.database
              value: PexipEvent
            - name: usercontext.header.name
              value: X-Test-Auth
            - name: userattributes.role.key
              value: UserRoles
            - name: userrole.admin.values
              value: admin
            - name: userrole.user.values
              value: justuser,user
            - name: userattributes.org.key
              value: Org
            - name: userrole.monitor.values
              value: monitor
            - name: userrole.provisioner.values
              value: provisioner
            - name: logging.level.dk.medcom.vdx.pexip
              value: DEBUG
          ports:
            - name: container-port
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /history/actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
      volumes:
        - configMap:
            name: pexip-history-config
          name: caddy-config
        - name: sts-public-cert
          secret:
            secretName: sts-public-cert
---
# Source: kitcaddy/templates/doc-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pexip-history-documentation
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history-documentation
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: $1
spec:
  tls:
    - hosts:
        - "docs.vdxapi.dk"
      secretName: star.vdxapi.dk
  rules:
    - host: "docs.vdxapi.dk"
      http:
        paths:
          - path: /medcom-vdx-pexip-history(.*)
            backend:
              serviceName: pexip-history-documentation
              servicePort: 8080
---
# Source: kitcaddy/templates/kitcaddy-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pexip-history
  namespace: pexip
  labels:
    helm.sh/chart: kitcaddy-0.1.3
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: pexip-history
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header forwarded-from-nginx $ssl_client_escaped_cert;
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: true
    nginx.ingress.kubernetes.io/auth-tls-verify-client: optional_no_ca
    nginx.ingress.kubernetes.io/auth-url: http://testserviceaa:8787/
spec:
  tls:
    - hosts:
        - "vdxapi.dk"
      secretName: star.vdxapi.dk
  rules:
    - host: "pexip-sink.vdxapi.dk"
      http:
        paths:
          - path: /history
            backend:
              serviceName: pexip-history
              servicePort: 8080
